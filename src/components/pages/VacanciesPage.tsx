import React, { useState } from 'react';

interface Vacancy {
  id: number;
  title: string;
  location: string;
  type: string;
  salary: string;
  description: string[];
  requirements: string[];
}

interface Benefit {
  id: number;
  icon: string;
  title: string;
  description: string;
}

const benefits: Benefit[] = [
  {
    id: 1,
    icon: 'üå±',
    title: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç',
    description: '–û–±—É—á–µ–Ω–∏–µ —É –≤–µ–¥—É—â–∏—Ö —Ñ–ª–æ—Ä–∏—Å—Ç–æ–≤, —É—á–∞—Å—Ç–∏–µ –≤ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞—Ö –∏ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö'
  },
  {
    id: 2,
    icon: 'üí∞',
    title: '–î–æ—Å—Ç–æ–π–Ω–∞—è –æ–ø–ª–∞—Ç–∞',
    description: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞, –ø—Ä–µ–º–∏–∏ –∑–∞ —É—Å–ø–µ—Ö–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏'
  },
  {
    id: 3,
    icon: 'ü§ù',
    title: '–î—Ä—É–∂–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ç–∏–≤',
    description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'
  },
  {
    id: 4,
    icon: 'üìÖ',
    title: '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫',
    description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞ —É–¥–æ–±–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã'
  }
];

const vacancies: Vacancy[] = [
  {
    id: 1,
    title: '–§–ª–æ—Ä–∏—Å—Ç',
    location: '–¢–¶ "–ö–∞—Ä–∞–º–µ–ª—å"',
    type: '–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å',
    salary: '–æ—Ç 45 000 ‚ÇΩ',
    description: [
      '–°–æ–∑–¥–∞–Ω–∏–µ –±—É–∫–µ—Ç–æ–≤ –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–π',
      '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
      '–†–∞–±–æ—Ç–∞ —Å –∫–∞—Å—Å–æ–π',
      '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏'
    ],
    requirements: [
      '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Ñ–ª–æ—Ä–∏—Å—Ç–æ–º –æ—Ç 1 –≥–æ–¥–∞',
      '–ó–Ω–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∏',
      '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥',
      '–ö–ª–∏–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å'
    ]
  },
  {
    id: 2,
    title: '–ü–æ–º–æ—â–Ω–∏–∫ —Ñ–ª–æ—Ä–∏—Å—Ç–∞',
    location: '–¢–¶ "–°–∏–ª—å–≤–µ—Ä –ú–æ–ª–ª"',
    type: '–°–º–µ–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫',
    salary: '–æ—Ç 35 000 ‚ÇΩ',
    description: [
      '–ü–æ–º–æ—â—å –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—É–∫–µ—Ç–æ–≤',
      '–£—Ö–æ–¥ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
      '–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞',
      '–†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏'
    ],
    requirements: [
      '–ñ–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–µ',
      '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
      '–ê–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å',
      '–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π'
    ]
  },
  {
    id: 3,
    title: '–ö—É—Ä—å–µ—Ä',
    location: '–í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã',
    type: '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫',
    salary: '–æ—Ç 40 000 ‚ÇΩ',
    description: [
      '–î–æ—Å—Ç–∞–≤–∫–∞ –±—É–∫–µ—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞–º',
      '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏',
      '–ü—Ä–∏–µ–º –æ–ø–ª–∞—Ç—ã',
      '–§–æ—Ç–æ–æ—Ç—á–µ—Ç –æ –¥–æ—Å—Ç–∞–≤–∫–µ'
    ],
    requirements: [
      '–ù–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
      '–û–ø—ã—Ç –≤–æ–∂–¥–µ–Ω–∏—è –æ—Ç 2 –ª–µ—Ç',
      '–ó–Ω–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞',
      '–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å'
    ]
  }
];

const VacanciesPage: React.FC = () => {
  const [selectedVacancy, setSelectedVacancy] = useState<Vacancy | null>(null);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    resume: null as File | null,
    cover: ''
  });

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFormData(prev => ({
        ...prev,
        resume: e.target.files![0]
      }));
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    console.log('Form submitted:', formData);
  };

  return (
    <div className="vacancies">
      <div className="container">
        <section className="vacancies__hero">
          <h1 className="vacancies__title">–í–∞–∫–∞–Ω—Å–∏–∏</h1>
          <p className="vacancies__subtitle">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ BAZAAR –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —É—Å–ø–µ—à–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
          </p>
        </section>

        <section className="vacancies__benefits">
          <h2 className="vacancies__section-title">–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞–º–∏</h2>
          <div className="benefits__grid">
            {benefits.map(benefit => (
              <div key={benefit.id} className="benefit-card">
                <div className="benefit-card__icon">{benefit.icon}</div>
                <h3 className="benefit-card__title">{benefit.title}</h3>
                <p className="benefit-card__description">{benefit.description}</p>
              </div>
            ))}
          </div>
        </section>

        <section className="vacancies__list">
          <h2 className="vacancies__section-title">–û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏</h2>
          <div className="vacancies__grid">
            {vacancies.map(vacancy => (
              <div
                key={vacancy.id}
                className={`vacancy-card ${selectedVacancy?.id === vacancy.id ? 'vacancy-card--active' : ''}`}
                onClick={() => setSelectedVacancy(vacancy)}
              >
                <div className="vacancy-card__header">
                  <h3 className="vacancy-card__title">{vacancy.title}</h3>
                  <span className="vacancy-card__salary">{vacancy.salary}</span>
                </div>
                <div className="vacancy-card__meta">
                  <span className="vacancy-card__location">
                    <span className="vacancy-card__icon">üìç</span>
                    {vacancy.location}
                  </span>
                  <span className="vacancy-card__type">
                    <span className="vacancy-card__icon">üïí</span>
                    {vacancy.type}
                  </span>
                </div>
                <div className="vacancy-card__content">
                  <div className="vacancy-card__section">
                    <h4 className="vacancy-card__section-title">–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</h4>
                    <ul className="vacancy-card__list">
                      {vacancy.description.map((item, index) => (
                        <li key={index}>{item}</li>
                      ))}
                    </ul>
                  </div>
                  <div className="vacancy-card__section">
                    <h4 className="vacancy-card__section-title">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h4>
                    <ul className="vacancy-card__list">
                      {vacancy.requirements.map((item, index) => (
                        <li key={index}>{item}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>

        {selectedVacancy && (
          <section className="vacancies__form">
            <h2 className="vacancies__section-title">
              –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é {selectedVacancy.title}
            </h2>
            <form className="application-form" onSubmit={handleSubmit}>
              <div className="application-form__grid">
                <div className="application-form__field">
                  <label htmlFor="name" className="application-form__label">
                    –í–∞—à–µ –∏–º—è
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                    className="application-form__input"
                    required
                  />
                </div>

                <div className="application-form__field">
                  <label htmlFor="phone" className="application-form__label">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                    className="application-form__input"
                    required
                  />
                </div>

                <div className="application-form__field">
                  <label htmlFor="email" className="application-form__label">
                    Email
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                    className="application-form__input"
                    required
                  />
                </div>

                <div className="application-form__field application-form__field--full">
                  <label htmlFor="resume" className="application-form__label">
                    –†–µ–∑—é–º–µ
                  </label>
                  <input
                    type="file"
                    id="resume"
                    name="resume"
                    onChange={handleFileChange}
                    className="application-form__file"
                    accept=".pdf,.doc,.docx"
                    required
                  />
                  <span className="application-form__file-hint">
                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX
                  </span>
                </div>

                <div className="application-form__field application-form__field--full">
                  <label htmlFor="cover" className="application-form__label">
                    –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ
                  </label>
                  <textarea
                    id="cover"
                    name="cover"
                    value={formData.cover}
                    onChange={(e) => setFormData({ ...formData, cover: e.target.value })}
                    className="application-form__textarea"
                    rows={5}
                    required
                  />
                </div>
              </div>

              <button type="submit" className="button button--primary application-form__submit">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </button>
            </form>
          </section>
        )}

        <section className="vacancies__culture">
          <h2 className="vacancies__section-title">–ù–∞—à–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞</h2>
          <div className="culture__content">
            <div className="culture__text">
              <p>
                –í BAZAAR –º—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ –ø—Ä–æ—Å—Ç–æ –±—É–∫–µ—Ç—ã ‚Äì –º—ã —Å–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –¥–∞—Ä–∏–º —ç–º–æ—Ü–∏–∏. 
                –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ ‚Äì —ç—Ç–æ —É–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Å–≤–æ–∏–º –¥–µ–ª–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç 
                —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è.
              </p>
              <p>
                –ú—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, —Ü–µ–Ω–∏–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–æ–∑–¥–∞—Ç—å 
                –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –£ –Ω–∞—Å —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è 
                –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ —Ç—Ä–µ–Ω–∏–Ω–≥–∏.
              </p>
            </div>
            <div className="culture__image">
              <img src="/images/team/culture.jpg" alt="–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞" />
            </div>
          </div>
        </section>
      </div>
    </div>
  );
};

export default VacanciesPage; 