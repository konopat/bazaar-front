import React, { useState } from 'react';

interface BlogPost {
  id: number;
  title: string;
  excerpt: string;
  image: string;
  date: string;
  category: string;
  slug: string;
}

interface Category {
  id: number;
  name: string;
  slug: string;
}

const BLOG_POSTS: BlogPost[] = [
  {
    id: 1,
    title: '–ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—É–∫–µ—Ç —Å–≤–µ–∂–∏–º –¥–æ–ª—å—à–µ',
    excerpt: '–£–∑–Ω–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø—Ä–æ–¥–ª–∏—Ç—å –∂–∏–∑–Ω—å —Å—Ä–µ–∑–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö',
    image: '/images/blog/blog-1.jpg',
    date: '15 –º–∞—è 2023',
    category: '–°–æ–≤–µ—Ç—ã',
    slug: 'keep-flowers-fresh'
  },
  {
    id: 2,
    title: '–¢—Ä–µ–Ω–¥—ã —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∏ 2023',
    excerpt: '–û–±–∑–æ—Ä —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ü–≤–µ—Ç–æ—á–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π, —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å–æ—á–µ—Ç–∞–Ω–∏–π –∏ —Å—Ç–∏–ª–µ–π –≤ —ç—Ç–æ–º —Å–µ–∑–æ–Ω–µ',
    image: '/images/blog/blog-2.jpg',
    date: '3 –∞–ø—Ä–µ–ª—è 2023',
    category: '–¢—Ä–µ–Ω–¥—ã',
    slug: 'floral-trends-2023'
  },
  {
    id: 3,
    title: '–Ø–∑—ã–∫ —Ü–≤–µ—Ç–æ–≤: —á—Ç–æ –æ–∑–Ω–∞—á–∞—é—Ç —Ä–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç—ã',
    excerpt: '–ò—Å—Ç–æ—Ä–∏—è —Ñ–ª–æ—Ä–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä–∞—Ö',
    image: '/images/blog/blog-3.jpg',
    date: '21 –º–∞—Ä—Ç–∞ 2023',
    category: '–ò—Å—Ç–æ—Ä–∏—è',
    slug: 'flower-language'
  },
  {
    id: 4,
    title: '–ë—É–∫–µ—Ç –Ω–∞ —Å–≤–∞–¥—å–±—É: –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π',
    excerpt: '–°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ –±—É–∫–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–¥–µ–∞–ª—å–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç –æ–±—Ä–∞–∑ –Ω–µ–≤–µ—Å—Ç—ã',
    image: '/images/blog/blog-4.jpg',
    date: '15 —Ñ–µ–≤—Ä–∞–ª—è 2023',
    category: '–°–≤–∞–¥—å–±–∞',
    slug: 'wedding-bouquet'
  },
  {
    id: 5,
    title: '–†–∞—Å—Ç–µ–Ω–∏—è –¥–ª—è –æ—Ñ–∏—Å–∞: —Ç–æ–ø-10 –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã—Ö –≤–∏–¥–æ–≤',
    excerpt: '–ö–∞–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞—Ç—å –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É',
    image: '/images/blog/blog-5.jpg',
    date: '10 —è–Ω–≤–∞—Ä—è 2023',
    category: '–ö–æ–º–Ω–∞—Ç–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è',
    slug: 'office-plants'
  },
  {
    id: 6,
    title: '–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã: —á—Ç–æ —Ü–≤–µ—Ç–µ—Ç –∑–∏–º–æ–π',
    excerpt: '–û–±–∑–æ—Ä –∑–∏–º–Ω–∏—Ö —Ü–≤–µ—Ç–æ–≤ –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
    image: '/images/blog/blog-6.jpg',
    date: '5 –¥–µ–∫–∞–±—Ä—è 2022',
    category: '–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã',
    slug: 'winter-flowers'
  }
];

const CATEGORIES: Category[] = [
  { id: 1, name: '–í—Å–µ', slug: 'all' },
  { id: 2, name: '–°–æ–≤–µ—Ç—ã', slug: 'tips' },
  { id: 3, name: '–¢—Ä–µ–Ω–¥—ã', slug: 'trends' },
  { id: 4, name: '–ò—Å—Ç–æ—Ä–∏—è', slug: 'history' },
  { id: 5, name: '–°–≤–∞–¥—å–±–∞', slug: 'wedding' },
  { id: 6, name: '–ö–æ–º–Ω–∞—Ç–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è', slug: 'indoor-plants' },
  { id: 7, name: '–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã', slug: 'seasonal-flowers' }
];

const POSTS_PER_PAGE = 4;

const BlogPage: React.FC = () => {
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState<string>('');
  const [currentPage, setCurrentPage] = useState<number>(1);
  
  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredPosts = BLOG_POSTS.filter(post => {
    const matchesCategory = selectedCategory === 'all' || post.category.toLowerCase() === selectedCategory;
    const matchesSearch = post.title.toLowerCase().includes(searchQuery.toLowerCase()) || 
                           post.excerpt.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });
  
  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  const totalPages = Math.ceil(filteredPosts.length / POSTS_PER_PAGE);
  const indexOfLastPost = currentPage * POSTS_PER_PAGE;
  const indexOfFirstPost = indexOfLastPost - POSTS_PER_PAGE;
  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);
  
  const handleCategoryChange = (categorySlug: string) => {
    setSelectedCategory(categorySlug);
    setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  };
  
  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearchQuery(e.target.value);
    setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
  };
  
  const handlePageChange = (pageNumber: number) => {
    setCurrentPage(pageNumber);
  };

  return (
    <div className="blog">
      <div className="container">
        <h1 className="section-title section-title--centered">–ë–ª–æ–≥</h1>
        
        <div className="blog__search">
          <div className="search-field">
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å—è–º..."
              value={searchQuery}
              onChange={handleSearchChange}
              className="search-field__input"
            />
            <button className="search-field__button">
              üîç
            </button>
          </div>
        </div>
        
        <div className="blog__content">
          <aside className="blog__sidebar">
            <div className="blog__categories">
              <h2 className="blog__sidebar-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
              <ul className="categories-list">
                {CATEGORIES.map(category => (
                  <li 
                    key={category.id} 
                    className={`categories-list__item ${selectedCategory === category.slug ? 'categories-list__item--active' : ''}`}
                  >
                    <button
                      onClick={() => handleCategoryChange(category.slug)}
                      className="categories-list__button"
                    >
                      {category.name}
                    </button>
                  </li>
                ))}
              </ul>
            </div>
          </aside>
          
          <main className="blog__main">
            {currentPosts.length > 0 ? (
              <>
                <div className="blog__posts">
                  {currentPosts.map(post => (
                    <article key={post.id} className="blog-card">
                      <div className="blog-card__image-wrapper">
                        <img src={post.image} alt={post.title} className="blog-card__image" />
                        <span className="blog-card__category">{post.category}</span>
                      </div>
                      <div className="blog-card__content">
                        <span className="blog-card__date">{post.date}</span>
                        <h3 className="blog-card__title">{post.title}</h3>
                        <p className="blog-card__excerpt">{post.excerpt}</p>
                        <a href={`/blog/${post.slug}`} className="blog-card__link">
                          –ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ
                        </a>
                      </div>
                    </article>
                  ))}
                </div>
                
                {totalPages > 1 && (
                  <div className="blog__pagination">
                    <button
                      onClick={() => handlePageChange(currentPage - 1)}
                      disabled={currentPage === 1}
                      className="pagination__button"
                    >
                      &larr;
                    </button>
                    
                    {Array.from({ length: totalPages }, (_, i) => i + 1).map(number => (
                      <button
                        key={number}
                        onClick={() => handlePageChange(number)}
                        className={`pagination__button ${currentPage === number ? 'pagination__button--active' : ''}`}
                      >
                        {number}
                      </button>
                    ))}
                    
                    <button
                      onClick={() => handlePageChange(currentPage + 1)}
                      disabled={currentPage === totalPages}
                      className="pagination__button"
                    >
                      &rarr;
                    </button>
                  </div>
                )}
              </>
            ) : (
              <div className="blog__no-results">
                <p>–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                <button 
                  onClick={() => {
                    setSearchQuery('');
                    setSelectedCategory('all');
                  }}
                  className="button button--primary"
                >
                  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </button>
              </div>
            )}
          </main>
        </div>
      </div>
    </div>
  );
};

export default BlogPage; 